"""app initial migrations

Revision ID: 2753520db5b8
Revises: 
Create Date: 2025-06-17 03:22:25.242650

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '2753520db5b8'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('clients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('first_name', sa.String(length=25), nullable=False),
    sa.Column('last_name', sa.String(length=25), nullable=False),
    sa.Column('phone', sa.String(length=15), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('clients', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_clients_email'), ['email'], unique=True)

    op.create_table('services',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('category', sa.String(length=30), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('price', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('address',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_email', sa.String(length=120), nullable=False),
    sa.Column('address_line1', sa.String(length=255), nullable=False),
    sa.Column('address_line2', sa.String(length=255), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=False),
    sa.Column('state', sa.String(length=100), nullable=False),
    sa.Column('postal_code', sa.String(length=20), nullable=False),
    sa.ForeignKeyConstraint(['client_email'], ['clients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('service_addons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('service_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('price', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['service_id'], ['services.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('bookings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_email', sa.String(length=120), nullable=False),
    sa.Column('service_type', sa.String(length=100), nullable=False),
    sa.Column('service_info', sa.Integer(), nullable=False),
    sa.Column('addons', sa.Integer(), nullable=True),
    sa.Column('frequency', sa.Enum('one-time', 'weekly', 'bi-weekly', 'monthly'), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('booking_date', sa.DateTime(), nullable=False),
    sa.Column('cleaning_date', sa.DateTime(), nullable=False),
    sa.Column('booking_status', sa.String(length=20), nullable=False),
    sa.Column('payment_status', sa.String(length=20), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['addons'], ['service_addons.id'], ),
    sa.ForeignKeyConstraint(['client_email'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['service_info'], ['services.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('bookings', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_bookings_addons'), ['addons'], unique=False)
        batch_op.create_index(batch_op.f('ix_bookings_client_email'), ['client_email'], unique=False)
        batch_op.create_index(batch_op.f('ix_bookings_service_info'), ['service_info'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('bookings', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_bookings_service_info'))
        batch_op.drop_index(batch_op.f('ix_bookings_client_email'))
        batch_op.drop_index(batch_op.f('ix_bookings_addons'))

    op.drop_table('bookings')
    op.drop_table('service_addons')
    op.drop_table('address')
    op.drop_table('services')
    with op.batch_alter_table('clients', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_clients_email'))

    op.drop_table('clients')
    # ### end Alembic commands ###
